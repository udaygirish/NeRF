basedir: 
  type: str
  default: "./logs/"
  help: "where to store ckpts and logs"
datadir: 
  type: str
  default: "../nerf-synthetic/ship"
  help: "input data directory"
network_depth: 
  type: int
  default: 8
  help: "layers in network"
num_hidden_layers: 
  type: int
  default: 256
  help: "channels per layer"
network_depth_fine: 
  type: int
  default: 8
  help: "layers in fine network"
netwidth_fine: 
  type: int
  default: 256
  help: "channels per layer in fine network"
N_rand: 
  type: int
  default: 1024 #32 * 32 * 4
  help: "batch size (number of random rays per gradient step)"
lrate: 
  type: float
  default: 5e-4
  help: "learning rate"
lrate_decay: 
  type: int
  default: 250
  help: "exponential learning rate decay (in 1000 steps)"
chunk: 
  type: int
  default: 32768 #1024 * 32
  help: "number of rays processed in parallel, decrease if running out of memory"
netchunk: 
  type: int
  default: 65536 # 1024 * 64
  help: "number of pts sent through network in parallel, decrease if running out of memory"
use_batching: 
  type: bool
  default: False
  help: "Batch rays or not"
no_reload: 
  type: bool
  default: True
  help: "do not reload weights from saved ckpt"
ckpt_path: 
  type: "./logs/ship_wb_f/155000.ckpt"
  default: null
  help: "specific weights npy file to reload for coarse network"
N_samples: 
  type: int
  default: 64
  help: "number of coarse samples per ray"
N_importance: 
  type: int
  default: 128
  help: "number of additional fine samples per ray"
perturb: 
  type: float
  default: 1.0
  help: "set to 0. for no jitter, 1. for jitter"
use_viewdirs: 
  type: bool
  default: True
  help: "use full 5D input instead of 3D"
i_embed: 
  type: int
  default: 0
  help: "set 0 for default positional encoding, -1 for none"
multires: 
  type: int
  default: 10
  help: "log2 of max freq for positional encoding (3D location)"
multires_views: 
  type: int
  default: 4
  help: "log2 of max freq for positional encoding (2D direction)"
raw_noise_std: 
  type: float
  default: 0.0
  help: "std dev of noise added to regularize sigma_a output, 1e0 recommended"
render_only: 
  type: bool
  default: False
  help: "do not optimize, reload weights and render out render_poses path"
render_test: 
  type: bool 
  default: False
  help: "render the test set instead of render_poses path"
render_factor: 
  type: int
  default: 0
  help: "downsampling factor to speed up rendering, set 4 or 8 for fast preview"
precrop_iters: 
  type: int
  default: 500
  help: "number of steps to train on central crops"
precrop_frac: 
  type: float
  default: 0.5
  help: "fraction of img taken for central crops"
dataset_type: 
  type: str
  default: "blender"
  help: "Blender Dataset Type - Others are not implemented"
testskip: 
  type: int
  default: 8
  help: "will load 1/N images from test/val sets, useful for large datasets like deepvoxels"
shape: 
  type: str
  default: "lego"
  help: "options : lego/ship"
white_bkgd: 
  type: bool
  default: False #only True for white background images
  help: "set to render synthetic data on a white bkgd (always use for dvoxels)"
half_res: 
  type: bool
  default: True
  help: "load blender synthetic data at 400x400 instead of 800x800"
factor: 
  type: int
  default: 8
  help: "render_factor"
no_ndc: 
  type: bool
  default: True
  help: "do not use normalized device coordinates (set for non-forward facing scenes)"
lindisp: 
  type: bool
  default: False
  help: "sampling linearly in disparity rather than depth"
spherify: 
  type: bool
  default: True
  help: "set for spherical 360 scenes"
iprint: 
  type: int
  default: 100
  help: "frequency of console printout and metric loggin"
i_img: 
  type: int
  default: 5000
  help: "frequency of tensorboard image logging"
i_weights: 
  type: int
  default: 5000
  help: "frequency of weight ckpt saving"
i_testset: 
  type: int
  default: 5000
  help: "frequency of Test Loss measurement"
i_video: 
  type: int
  default: 10000
  help: "frequency of render_poses video saving"
expname: 
  type: str
  default: "ship_wb_f"
  help: "name of experiment"
include_input:
  type: bool
  default: True
  help: "include input image in network input"
input_ch: 
  type: int
  default: 3
  help: "number of input channels"
log_sampling: 
  type: bool
  default: True
  help: "logarithmic sampling of rays"
include_raw:
  type: bool
  default: True
  help: "include raw color in network input"
invdepth: 
  type: bool
  default: True
  help: "use inverse depth"
N_iters:
  type: int
  default: 200000
  help: "number of iterations to train for"
decay_steps:
  type: int
  default: 1000
  help: "number of steps to decay learning rate"
decay_rate:
  type: float
  default: 0.1
  help: "learning rate decay rate"
near: 
  type: float
  default: 2.0
  help: "near plane"
far:
  type: float
  default: 6.0
  help: "far plane"
delete_prev_results:
  type: bool
  default: True
  help: "delete previous results"
wandb_experiment_name:
  type: str
  default: "lego"
  help: "name of experiment in wandb"
wandb_project_name:
  type: str
  default: "nerf"
  help: "name of project in wandb"
log_on_wandb:
  type: bool
  default: True
  help: "log on wandb"
image_count_test_frac:
  type: float
  default: 0.1
  help: "number of images to render for test set"

